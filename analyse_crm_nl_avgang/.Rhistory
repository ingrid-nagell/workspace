setwd("~/workspace")
setwd("~/workspace")
setwd("~/workspace/analyse_crm_nl_avgang")
setwd("~/workspace/analyse_crm_nl_avgang")
userid <- credentials[["username"]]
passwd <- credentials[["password"]]
library(ggplot2)
getCredentials = function(targetMachine){
netrcFile <- file.path(path.expand("~"), ".netrc", fsep = .Platform$file.sep)
con = file(netrcFile, "r")
# read whole (small) file into a single string, collape any newlines
netrcStr <- paste(readLines(con), collapse=" ")
close(con)
# split the fields on whitespace (.netrc format can be 1 line per host or multiline)
fields <- strsplit(netrcStr, "\\s+")[[1]]
machine <- ''
username <- ''
password <- ''
i=1
while (i <= length(fields)) {
# process the fields
if (fields[i] == 'machine') {
i <- i +1
machine <- fields[i]
username <- ''
password <- ''
i <- i +1
} else if (fields[i] == 'default') {
i <- i +1
machine <- 'default'
} else if (fields[i] == 'login') {
i <- i +1
username <- fields[i]
i <- i +1
} else if (fields[i] == 'password') {
i <- i +1
password <- fields[i]
i <- i +1
} else {
i <- i + 1
}
if ((machine == targetMachine || machine == 'default') &&
(username != '') && (password != '') ) {
break
}
}
return (list("username" = username, "password" = password))
}
credentials <- getCredentials('db2')
View(getCredentials)
View(credentials)
userid <- credentials[["username"]]
passwd <- credentials[["password"]]
library(ggplot2)
connection <- odbc::dbConnect(odbc::odbc(), "IVHP01", UID = userid, PWD = passwd)
select <- "SELECT (LEVETID_SISTE_AAPN_DAGER - LEVETID_SISTE_OPPH_DAGER) AS LEVETID,
LEVETID_ANN_AARSAK_NAVN_KUNDE as AVGANGSAARSAK,
BEST_PRM_NL_INTERV_KODE as PREMIE,
NAERING_GRP_NAVN_PRIM as BRANSJE,
FYLKE_NR as FYLKE,
REGN_DRIFT_INTK as INNTEKT,
ANT_ANSATT,
KUNDE_SCORE_INTERV_KODE as KUNDE_SCORE,
ANT_RISIKO
FROM G00V.G70_PART_NL
WHERE SKF_KUNDE_FLAGG = 0
AND LEVETID_SISTE_OPPH_DAGER < 91
AND (LEVETID_SISTE_AAPN_DAGER - LEVETID_SISTE_OPPH_DAGER) < 30
AND (LEVETID_SISTE_AAPN_DAGER - LEVETID_SISTE_OPPH_DAGER) > 0"
result <- odbc::dbSendQuery(connection, select)
data <- data.table::setDT(odbc::dbFetch(result))
odbc::dbClearResult(result)
odbc::dbDisconnect(connection)
View(result)
View(result)
